;; types
Char = /char
Bool = /bool

;; primitives
== = equals
equals: (a, a) -> Bool
output: a -> ()

nested-if-foo: (Bool, Char) -> Char = \(p, c) => /if
  c == #"a" = #"b"
  c == #"b" = #"c"
  p = c
  _ = #"z"

nested-if-bar: (Bool, Char) -> Char = \(p, c) => /if
  c == #"a" = #"b"
  _ = /if
    c == #"b" = #"c"
    _ = /if
      p = c
      _ = #"z"

nested-if-seq: Char -> () = \c => /do
    /if
      c == #"c" = output "one"
      _         = output "two"
    /if
      c == #"a" = output "three"
      _ = output "four"
