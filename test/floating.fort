Float32 = /Floating 32
Float64 = /Floating 64
Bool = /Bool
Int = /Signed 32

output : a -> ()

add : (a, a) -> a
subtract : (a, a) -> a
multiply : (a, a) -> a
divide : (a, a) -> a
remainder : (a, a) -> a
;; negate : a -> a ;; BAL:

equals : (a, a) -> Bool
== = equals
not-equals : (a, a) -> Bool
!= = not-equals

greater-than-or-equals : (a, a) -> Bool
>= = greater-than-or-equals

greater-than : (a, a) -> Bool
> = greater-than

less-than-or-equals : (a, a) -> Bool
<= = less-than-or-equals

less-than : (a, a) -> Bool
< = less-than

cast : a -> b

sqrt : a -> a
sin : a -> a

test : (Float32, Float64) -> () = \(x, y) => /do
  output x
  output (add (1, y))
  output (1.3 : Float64)
  output (1.25 : Float32) ;; bug in llvm-hs-pretty s.t. 1.3 causes an error
  output "sin is"
  output (sin (3.0 : Float64))
  output "sqrt is"
  /let rt = sqrt x
  output rt
  output y
  /let a:Int = cast x
  output a
  /let b:Float64 = cast a
  output b
  /if
    x >= cast y = /if
      cast x > y = /do
        output "x > y"
        output x
        output y
        output (add(cast x, y)) ;; fadd
        output (subtract(x, cast y)) ;; fsub
        output (multiply(x, x)) ;; fmul
        output (divide(x, x)) ;; fdiv
        output (remainder(y, y)) ;; frem
      _ = /do
        output "x == y"
    _ = /do
      output "x < y"
  ;; /if
  ;;   y <= cast x = /if
  ;;     y < cast x = /do
  ;;       output "y < x"
  ;;     _ = /do
  ;;       output "y == x"
  ;;   _ = /do
  ;;     output "x > y"
  ;; /if
  ;;   cast x == y = /do
  ;;     output "x == y"
  ;;   _ = /do
  ;;     output "x != y"
  ;; /if
  ;;   x != cast y = /do
  ;;     output "x != y"
  ;;   _ = /do
  ;;     output "x == y"
